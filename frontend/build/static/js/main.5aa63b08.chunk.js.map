{"version":3,"sources":["components/BarChart.js","components/PieChart.js","App.js","reportWebVitals.js","index.js"],"names":["BarChart","data","type","x","y","name","layout","width","height","title","React","Component","PieChart","values","labels","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PA2CeA,E,4JArCb,WAEE,OAEE,cAAC,IAAD,CAEEC,KAAM,CAgBJ,CAAEC,KAAM,MAAOC,EAAG,CAAC,gBAAiBC,EAAG,CAAC,MAAOC,KAAM,wBACrD,CAAEH,KAAM,MAAOC,EAAG,CAAC,gBAAiBC,EAAG,CAAC,KAAMC,KAAM,sBAItDC,OAAQ,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,MAAO,4B,GA7B3BC,IAAMC,WC+BdC,E,4JA5Bb,WAcE,OAEE,cAAC,IAAD,CACEX,KAfS,CAAC,CACVY,OAAQ,CAAC,GAAI,GAAI,IACjBC,OAAQ,CAAC,YAAa,iBAAkB,YACxCZ,KAAM,QAaNI,OAVW,CACXE,OAAQ,IACRD,MAAO,IACPE,MAAO,8B,GAdQC,IAAMC,WCcdI,MAdf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,8BAGA,qEACA,cAAC,EAAD,IACA,8DACA,cAAC,EAAD,QCDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5aa63b08.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Plot from \"react-plotly.js\";\n\nclass BarChart extends React.Component {\n\n  render() {\n\n    return (\n\n      <Plot\n\n        data={[\n\n          // {\n\n          //   x: [1, 2, 3],\n\n          //   y: [2, 6, 3],\n\n          //   type: \"scatter\",\n\n          //   mode: \"lines+markers\",\n\n          //   marker: { color: \"red\" },\n\n          // },\n\n          { type: \"bar\", x: [\"manual check\"], y: [1400], name: \"Without our solution\" },\n          { type: \"bar\", x: [\"our solution\"], y: [700], name: \"With our solution\"},\n\n        ]}\n\n        layout={{ width: 640, height: 480, title: \"Some made-up stats\" }}\n\n      />\n\n    );\n\n  }\n\n}\n\nexport default BarChart;","import React from \"react\";\n\nimport Plot from \"react-plotly.js\";\n\nclass PieChart extends React.Component {\n\n\n  render() {\n\n    const data = [{\n        values: [46, 28, 26],\n        labels: ['ML models', 'Visualisations', 'Hustlin\\''],\n        type: 'pie'\n      }];\n\n    const layout = {\n        height: 400,\n        width: 500,\n        title: \"Our idea consists of\"\n      };\n\n    return (\n\n      <Plot\n        data={data}\n        layout={layout}\n\n      />\n\n    );\n\n  }\n\n}\n\nexport default PieChart;","import './App.css';\nimport BarChart from \"./components/BarChart\"\nimport PieChart from \"./components/PieChart\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Team CreativeNet\n      </header>\n      <p>We are making an ML-based optimiser.</p>\n      <BarChart />\n      <p>More details will come later.</p>\n      <PieChart />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}